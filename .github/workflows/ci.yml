name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          task-app/server/package-lock.json
          task-app/client/package-lock.json
    
    - name: Install server dependencies
      working-directory: ./task-app/server
      run: npm ci
      
    - name: Install client dependencies
      working-directory: ./task-app/client
      run: npm ci
    
    - name: Run server tests
      working-directory: ./task-app/server
      run: npm test
      
    - name: Run client tests
      working-directory: ./task-app/client
      run: npm test -- --coverage --watchAll=false
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./task-app/client/coverage/lcov.info
        flags: frontend
        name: task-app-coverage
        
    - name: Build client
      working-directory: ./task-app/client
      run: npm run build
      
    - name: Run linting
      working-directory: ./task-app/client
      run: npm run lint --if-present

  security-audit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        
    - name: Server security audit
      working-directory: ./task-app/server
      run: npm audit --audit-level=moderate
      
    - name: Client security audit
      working-directory: ./task-app/client
      run: npm audit --audit-level=moderate

  deploy:
    needs: [test, security-audit]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        
    - name: Install dependencies and build
      working-directory: ./task-app/client
      run: |
        npm ci
        npm run build
        
    - name: Deploy to staging
      run: echo "Deploy to staging environment"
      # Add your deployment commands here
      # Example: Deploy to Heroku, AWS, etc.
      
    - name: Run integration tests
      run: echo "Run integration tests against staging"
      # Add integration test commands here
      
    - name: Deploy to production
      if: success()
      run: echo "Deploy to production environment"
      # Add production deployment commands here