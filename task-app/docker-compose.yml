version: '3.8'

services:
  task-app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    volumes:
      - ./data:/app/server/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  task-app-dev:
    profiles: ["dev"]
    build:
      context: .
      target: build
    ports:
      - "3000:3000"
      - "5000:5000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./task-app/client:/app/client
      - ./task-app/server:/app/server
      - /app/client/node_modules
      - /app/server/node_modules
    command: sh -c "cd server && npm run dev & cd client && npm start"
    restart: unless-stopped

  nginx:
    profiles: ["production"]
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - task-app
    restart: unless-stopped

volumes:
  data: